/*
 * This file is generated by jOOQ.
 */
package com.lorenjamison.citronella.data.generated.citronella;


import com.lorenjamison.citronella.data.generated.citronella.tables.Projects;
import com.lorenjamison.citronella.data.generated.citronella.tables.Users;
import com.lorenjamison.citronella.data.generated.citronella.tables.records.ProjectsRecord;
import com.lorenjamison.citronella.data.generated.citronella.tables.records.UsersRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * citronella.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ProjectsRecord> KEY_PROJECTS_PRIMARY = Internal.createUniqueKey(Projects.PROJECTS, DSL.name("KEY_projects_PRIMARY"), new TableField[] { Projects.PROJECTS.ID }, true);
    public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = Internal.createUniqueKey(Users.USERS, DSL.name("KEY_users_PRIMARY"), new TableField[] { Users.USERS.ID }, true);
    public static final UniqueKey<UsersRecord> KEY_USERS_USERS_AUTH0_ID_IDX = Internal.createUniqueKey(Users.USERS, DSL.name("KEY_users_users_auth0_id_IDX"), new TableField[] { Users.USERS.AUTH0_ID }, true);
}
